name: Build and Deploy

on:
  workflow_dispatch: { }

env:
  AWS_REGION: eu-west-1
  S3BUCKET: aws-code-deploy-ec2
  CODE_DEPLOY_APPLICATION_NAME: demo-application
  CODE_DEPLOY_GROUP_NAME: demo-application-dg
  CODE_DEPLOY_BUCKET_NAME: aws-code-deploy-ec2
  CODE_DEPLOY_BUCKET_KEY: aws-code-deploy-ec2-0.0.1-SNAPSHOT-dist.zip

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build and Package Maven
        id: package
        run: mvn -Dmaven.test.skip=true clean install --file pom.xml

      - name: Upload Artifact to s3
        working-directory: ${{ github.workspace }}/target
        run: aws s3 cp *.zip s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          echo "Create deployment using s3"
          aws deploy create-deployment --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} --s3-location bucket=${{ env.CODE_DEPLOY_BUCKET_NAME }},bundleType=zip,key=${{ env.CODE_DEPLOY_BUCKET_KEY }} --ignore-application-stop-failures